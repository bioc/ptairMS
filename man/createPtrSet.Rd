% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_data.R
\name{createPtrSet}
\alias{createPtrSet}
\title{Create a ptrSet object form a directory}
\usage{
createPtrSet(
  dir,
  setName,
  mzCalibRef = c(21.022, 29.013424, 41.03858, 60.0525, 203.943, 330.8495),
  calibrationPeriod = 60,
  fracMaxTIC = 0.8,
  mzBreathTracer = NULL,
  knotsPeriod = 3,
  mzPrimaryIon = 21.022,
  saveDir = NULL
)
}
\arguments{
\item{dir}{character. a directory path which contains several h5 files, 
possibly organized in subfolder}

\item{setName}{character. The name of the ptrSet object. If `saveDir` is 
not null, the object will be saved with this name.}

\item{mzCalibRef}{Vector of accurate mass values of intensive peaks and 
'unique' in a nominal mass interval (without overlapping peaks) to performs 
calibration. See \code{ ?calibration}.}

\item{calibrationPeriod}{in second, coefficient calibration are estimated 
for each sum spectrum of 
\code{calibrationPeriod} seconds}

\item{fracMaxTIC}{Percentage (between 0 and 1) of the maximum of the 
Total Ion Current (TIC) amplitude with baseline removal. We will analyze 
only the part of the spectrum where  the TIC intensity is higher than 
`fracMaxTIC * max(TIC) `. If you want to analyze the entire spectrum,  set 
this parameter to 0.}

\item{mzBreathTracer}{NULL or an integer. Correspond to a nominal masses of 
Extract Ion Current  (EIC) for which limits will be computed. If NULL, the 
limits are calculated on the Total Ion Current (TIC).}

\item{knotsPeriod}{the period in second (times scale) between two knots for 
the two dimensional modelization}

\item{mzPrimaryIon}{the exact mass of the primary ion isotope}

\item{saveDir}{The directory where the ptrSet object will be saved in 
.RData. If NULL, nothing will be saved.}
}
\value{
a ptrSet objet with slot :
\itemize{
\item Parameter: a list containing the parameters used for 
\code{createPrtSet}, \code{detectPeak} and  \code{alignTimePeriods} functions.  
\item sampleMetadata: a data.frame containing infomration on the data, 
with file names in row names
\item mzCalibRef: a list containing for each file the masses used for the 
calibration  (see \code{?ptairMS::calibration} for more details)
\item signalCalibRef: the mz and intensity +- 0.4Da around the calibration 
masses
\item errorCalibPpm: a list containing for each file the accuracy error 
in ppm at each calibration masses
\item coefCalib: a list containing the calibration coeficients 'a' and 
'b' that permit to convert tof to mz for each file 
(see \code{?ptairMS::calibration} for more details.  
\item resolution: the estimated resolution \eqn{m / \Delta m} for each 
calibration masses within each file
\item TIC: The Total Ion Current for each file
\item timeLImit: a list containing list of two element per file: the matrix 
of time limit for each file  (if \code{fracMaxTIC} is different to zero), 
and the background index. See ?ptairMS::timeLimits for more details
\item peakListRaw: a list containing for each file a peak list per time 
interval and background. (the output of \code{detectPeak} function for 
each file, see \code{?ptairMS::detectPeak})
\item peakListAligned: one peak list for each file, obtain after alignment 
between all time period and backgroud.(the output of \code{alignTimePeriods} 
function)
}
}
\description{
This function creates a \code{\link[ptairMS]{ptrSet-class}} S4 object. It 
opens each file and: 
\itemize{
\item performs an external calibration with \code{mzCalibRef} masses on the 
sum spectra every \code{calibrationPeriod}
\item quantifies the primary ion (H3O+ isotope by default)  on the average 
total ion spectrum. 
\item calculates expiration on the \code{mzBreathTracer} trace. The part of 
the trace where  the intensity is higher than \code{fracMaxTIC * max(trace)} 
is considered as expiration. 
If \code{fracMaxTIC} is different to zero, this step is skipped
\item defines the set of knots for the peak analysis 
(see \code{\link[ptairMS]{detectPeak}})
\item provides a default sampleMetadata based on the tree structure of the 
directory and the acquisition date (a \code{data.frame} with file names in 
row names) 
\item If \code{saveDir} is not null, the returned object will be saved 
 \code{.Rdata} in \code{saveDir} with 
\code{setName} as name}
}
\examples{
library(ptairData)
directory <- system.file("extdata/mycobacteria",  package = "ptairData")
ptrSet<-createPtrSet(dir=directory,setName="ptrSet"
,mzCalibRef=c(21.022,59.049),
fracMaxTIC=0.9,saveDir= NULL)
}
